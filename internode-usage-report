#!/usr/bin/env python

#console-based nodeutil client. does one request, reports, and exits.
# By Dale Maggee.

#we won't need node_dialog for teh console app, just nodeutil! :D
from internode.nodeutil import *
from optparse import *

#create option parser with program help text & version string
p = OptionParser( usage="Usage: %%prog [options]\n\nRetrieves and displays stats on your Internode usage.\n\nIn order to be useful for scripting purposes, 'Internode report'-type info\n  (e.g: Usage Report / Error messages) are sent to STDOUT, while things\n  like status information (e.g: 'fetching') and --verbose's log messages\n  are sent to STDERR.\n\nPart of the NodeUtils Suite v%2.1f, (C)opyright Dale Maggee, 2011. BSD License." % VERSION,
		version="NodeUtil v%2.1f." % VERSION )

##################################################
# set up command-line options:
#

p.add_option("-H","--hunam-readable", action="store_true",
	dest="hunam", default=False, help="Hunam-readable mode: Generates a report optimized for the viewing pleasure of sapient lifeforms. This option is the default if no options are specified. If -H is specified explicitly, this disables all other options except for -v.")

p.add_option("-u","--used", action="store_false", 
	dest="used", default=True, help="Don't Show MB Used.")

p.add_option("-q","--quota", action="store_false",
	dest="quota", default=True, help="Don't Show Plan Quota")

p.add_option("-U","--%used", action="store_false",
	dest="percent_used", default=True, help="Don't Show Percentage of Quota Used.")

p.add_option("-r","--remaining", action="store_false",
	dest="remaining", default=True, help="Don't Show MB Remaining.")

p.add_option("-R","--%remaining", action="store_false",
	dest="percent_remaining", default=True, help="Don't Show Percentage of Quota Remaining.")

p.add_option("-d","--daysleft", action="store_false",
	dest="daysleft", default=True, help="Don't Show Days left in plan.")

p.add_option("-M","--mb-per-day", action="store_false",
	dest="mbperday", default=True, help="Don't Show MB remaining / days left")

p.add_option("-D","--rollover", action="store_true",
	dest="rollover", default=False, help="Show Plan Rollover Date.")

p.add_option("-I","--interval", action="store_true",
	dest="plan_interval", default=False, help="Show How often plan resets")

p.add_option("-p","--plan", action="store_true",
	dest="plan", default=False, help="Show Name of Internode Plan")

p.add_option("-n","--username", action="store_true",
	dest="username", default=False, help="Show Internode Username")

p.add_option("-s","--speed", action="store_true",
	dest="speed", default=False, help="Show Plan Speed")

p.add_option("-^","--uploads", action="store_true",
	dest="uploads_charged", default=False, help="Show 'uploads charged' indicator")

p.add_option("-C","--carrier", action="store_true",
	dest="carrier", default=False, help="Show Line Carrier")

p.add_option("-i","--ip", action="store_true",
	dest="ip", default=False, help="Show Internet IP Address")

p.add_option("-a","--all", action="store_true",
	dest="all", default=False, help="Show Everything. Overrides everything except -H, -v, and -m")

p.add_option("-c","--csv", action="store_true",
	dest="csv", default=False, help="Output CSV History (this is a misnomer: output is actually tab-delimited)")

p.add_option("-m","--short", action="store_true",
	dest="short", default=False, help="Show shorter, machine-readable output (format: <label>: <figure>).")

p.add_option("-v","--verbose", action="store_true",
	dest="verbose", default=False, help="Show debugging output. Note that this disables Hunam mode, so you may want to use '-vH' instead.")

#
#
##################################################

#Parse command line...
(options, args) = p.parse_args()

#react to some options straight away..

#verbose mode (note: no program output before here!)...
if options.verbose:
	set_debug()

#'all' sets everything except hunam to true...
if options.all:
	options.used = True
	options.quota = True
	options.percent_used = True
	options.remaining = True
	options.percent_remaining = True
	options.daysleft = True
	options.mbperday = True
	options.rollover = True
	options.plan_interval = True
	options.plan = True
	options.speed = True
	options.uploads_charged = True
	options.carrier = True
	options.ip = True
	options.username = True

#if no options were passed, run in Hunam mode:
if (len(sys.argv) - 1) == 0:
	#errprint("Hunam-Readable Mode Enabled")
	options.hunam = True

#Okie
log("----------------------------------------")
log("  Internode Console Usage Meter - Init")
log("----------------------------------------")
errprint("\nFetching Internode Usage...\n")

node = NodeUtil()

if not node.load_prefs():
	errprint("You have no preferences set, please enter below...")
	node.credentials.prompt_for_credentials()

node.update(True)

#wait for the thread to complete...
while node.status == "Updating":
	time.sleep(0.5)

if node.status == "OK":
	errprint("Usage data retrieved successfully (%2.3f seconds).\n" % node.took)

	if options.csv:
		#output CSV history...
		print "----------------------------------------------"
		print "Internode Usage History for: %s" % node.credentials.username
		print "----------------------------------------------"
		#print node.history
		for day in node.history:
			dt = day[0]
			y = int(dt[0:2]) + 2000
			m = int(dt[2:4])
			d = int(dt[4:6])
			print "%02d-%02d-%4d\t%9.3f MB" % (d,m,y,float(day[1]))

	elif options.hunam:
		if not options.short:
			print "----------------------------------------------"
			print "Internode Usage for: %s" % node.credentials.username
			print "----------------------------------------------"

		print " - You have used %2.2f MB / %2d MB ( %2.2f%% )."  % (node.used,node.quota,((node.used / node.quota)*100))
		print " - You have %2.2f MB remaining. ( %2.2f%% )" % (node.remaining, ((node.remaining / node.quota) * 100))
		print " - %1d days remain before your quota resets." % node.daysleft
		print " - This gives you %2.2f MB / day." % (node.mbperday)
		print "\n"
	else:
		#####################################
	
		if options.used:
			if options.short:
				print "Used: %s" % node.used
			else:
				print " - You have used %2.2f MB" % node.used
	
		if options.quota:
			if options.short:
				print "Quota: %s" % node.quota
			else:
				print " - Your quota is %2d MB" % node.quota
	
		if options.percent_used:
			if options.short:
				print "%% Used: %s" % node.percent_used
			else:
				print " - You have used %3.2f %% of your quota" % node.percent_used
	
		if options.remaining:
			if options.short:
				print "Remaining: %s" % node.remaining
			else:
				print " - You have %2.2f MB remaining" % node.remaining
	
		if options.percent_remaining:
			if options.short:
				print "%% Remaining: %s" % node.percent_remaining
			else:
				print " - You have %3.2f %% of your quota remaining" % node.percent_remaining
	
		if options.daysleft:
			if options.short:
				print "Days Left: %s" % node.daysleft
			else:
				print " - There are %1d day(s) left until your plan resets." % node.daysleft
	
		if options.mbperday:
			if options.short:
				print "MB/day remaining: %s" % node.mbperday
			else:
				print " - This works out to %2.2f MB/day remaining." % node.mbperday
	
		if options.rollover:
			if options.short:
				print "Rollover Date: %s" % node.rollover
			else:
				print " - Your plan rolls over on %s" % node.rollover
	
		if options.plan_interval:
			if options.short:
				print "Interval: %s" % node.plan_interval
			else:
				print " - Your Plan interval is %s" % node.plan_interval
	
		if options.plan:
			if options.short:
				print "Plan: %s" % node.plan
			else:
				print " - You are on the '%s' plan" % node.plan

		if options.username:
			if options.short:
				print "Username: %s" % node.credentials.username
			else:
				print " - Your Internode username is '%s'" % node.credentials.username
	
		if options.speed:
			if options.short:
				print "Plan Speed: %s" % node.speed
			else:
				print " - Your plan speed is %s" % node.speed
	
		if options.uploads_charged:
			if options.short:
				print "Uploads Count: %s" % node.uploads_charged
			else:
				if node.uploads_charged:
					s = "ARE"
				else:
					s = "are NOT"
				print " - Uploads %s charged" % s
	
		if options.carrier:
			if options.short:
				print "Carrier: %s" % node.carrier
			else:
				print " - Your Line Carrier is %s" % node.carrier
		
		if options.ip:
			if options.short:
				print "Internet IP: %s" % node.ip
			else:
				print " - Your Internet IP address is %s" % node.ip
	
		#####################################

else:
	errprint("Error (%2.3f seconds): %s\n" % (node.took, node.error))
	sys.exit(1)

